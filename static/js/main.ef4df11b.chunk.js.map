{"version":3,"sources":["Action/Api.js","Components/SearchResult.js","Components/Header.js","Components/GridList.js","App.js","reportWebVitals.js","index.js"],"names":["fetchImages","url","a","fetch","res","json","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","icon","color","withWidth","props","classes","useState","searchImageResult","setSearchIamgeResult","imagesApiFetch","data","results","console","log","useEffect","value","className","GridList","cellHeight","cols","isWidthUp","map","tile","GridListTile","src","urls","regular","alt","alt_description","GridListTileBar","title","subtitle","user","first_name","actionIcon","IconButton","aria-label","href","links","html","id","useStyle","menuButton","marginRight","spacing","marginBottom","flexGrow","fontSize","breakpoints","down","search","position","borderRadius","shape","fade","common","white","marginLeft","up","searchIcon","padding","height","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","Header","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","e","target","handleChange","imageData","setImageData","container","marginTop","App","setValue","Fragment","v","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef4df11b.chunk.js","sourcesContent":["export const fetchImages = async (url) => {\r\n    const res = await fetch(url);\r\n    return res.json();\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SaveIcon from '@material-ui/icons/SaveOutlined';\r\nimport { fetchImages } from '../Action/Api'\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: \"100%\",\r\n        // height: 450,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\n\r\nfunction SearchResult(props) {\r\n    const classes = useStyles();\r\n    const [searchImageResult, setSearchIamgeResult] = useState([]);\r\n\r\n    const getGridListCols = () => {\r\n        if (isWidthUp('lg', props.width)) {\r\n            return 4;\r\n        }\r\n\r\n        if (isWidthUp('md', props.width)) {\r\n            return 3;\r\n        }\r\n\r\n        if (isWidthUp('sm', props.width)) {\r\n            return 2;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    const imagesApiFetch = async (url) => {\r\n        let data = await fetchImages(url)\r\n        setSearchIamgeResult(data.results)\r\n    }\r\n    console.log(searchImageResult)\r\n    useEffect(() => {\r\n        imagesApiFetch(\"https://api.unsplash.com/search/photos?page=2&per_page=50&query=\" + props.value + \"&client_id=\" + process.env.REACT_APP_API_KEY);\r\n    }, [props.value]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {searchImageResult && <GridList cellHeight={380} className={classes.gridList} cols={getGridListCols()}>\r\n                {searchImageResult.map((tile) => (\r\n                    <GridListTile key={tile.id}>\r\n                        <img src={tile.urls.regular} alt={tile.alt_description} />\r\n                        <GridListTileBar\r\n                            title={tile.alt_description}\r\n                            subtitle={<span>by: {tile.user.first_name}</span>}\r\n                            actionIcon={\r\n                                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                                    <a href={tile.links.html}><SaveIcon /></a>\r\n                                </IconButton>\r\n                            }\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withWidth()(SearchResult)","// import { AppBar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { AppBar, Typography, Toolbar, makeStyles, IconButton, fade, InputBase } from '@material-ui/core'\r\nimport CameraOutlined from '@material-ui/icons/CameraOutlined'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: 1\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'block',\r\n        fontSize: 30,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyle();\r\n    const handleChange = (e) => {\r\n        props.onChange(e.target.value);\r\n    }\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                >\r\n                    <CameraOutlined />\r\n                </IconButton>\r\n                <Typography variant='h1' className={classes.title} noWrap> The Wall</Typography>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport { fetchImages } from '../Action/Api'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: \"100%\",\r\n        // height: 1000,\r\n    },\r\n}));\r\n\r\nfunction ImageGridList(props) {\r\n    const classes = useStyles();\r\n    const [imageData, setImageData] = useState([])\r\n    const getGridListCols = () => {\r\n        if (isWidthUp('lg', props.width)) {\r\n            return 4;\r\n        }\r\n\r\n        if (isWidthUp('md', props.width)) {\r\n            return 3;\r\n        }\r\n\r\n        if (isWidthUp('sm', props.width)) {\r\n            return 2;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n    const imagesApiFetch = async (url) => {\r\n        let data = await fetchImages(url)\r\n        setImageData(data)\r\n    }\r\n    useEffect(() => {\r\n        // fetch(\"https://api.unsplash.com/photos/?page=2&per_page=50&client_id=\" + process.env.REACT_APP_API_KEY)\r\n        //     .then(res => res.json())\r\n        //     .then(data => {\r\n        //         console.log(data)\r\n        //         setImageData(data)\r\n        //     })\r\n        imagesApiFetch(\"https://api.unsplash.com/photos/?page=2&per_page=50&client_id=\" + process.env.REACT_APP_API_KEY);\r\n\r\n    }, []);\r\n    // const handleButton = () => {\r\n    //     console.log(imageData);\r\n    // }\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <button onClick={() => handleButton()}> Button</button> */}\r\n            {imageData && <GridList spacing={18} cellHeight={350} className={classes.gridList} cols={getGridListCols()}>\r\n                {imageData.map((tile) => (\r\n                    <GridListTile key={tile.id} cols={tile.cols || 1}>\r\n                        <img src={tile.urls.regular} alt={tile.alt_description} />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withWidth()(ImageGridList);","import SearchResult from './Components/SearchResult'\nimport Header from './Components/Header'\nimport GridList from './Components/GridList'\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core';\nimport Container from '@material-ui/core/Container'\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    // background: \"red\",\n    marginTop: 10\n  }\n}));\n\nfunction App() {\n  const classes = useStyle();\n  const [value, setValue] = useState('');\n  const handleChange = (e) => {\n    setValue(e);\n  }\n  console.log(value);\n  return (\n    <React.Fragment>\n      <Header onChange={(v) => handleChange(v)} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        {value ? <SearchResult value={value} /> : <GridList />}\n        <br />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}